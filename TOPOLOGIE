from manim import *

config.frame_width = 16
config.frame_height = 9

TITLE_FONT_SIZE = 56
BODY_FONT_SIZE = 36
SMALL_FONT_SIZE = 24

class OuvertsFermesScene(Scene):
    def construct(self):
        # Couleurs
        PRIMARY = ManimColor.from_hex("#58C4DD")
        SECONDARY = ManimColor.from_hex("#FC6255")
        BG = ManimColor.from_hex("#000000")
        FG = ManimColor.from_hex("#ffffff")

        self.camera.background_color = BG

        # --- 0. Nom au début ---
        name = MathTex(
            r"\mathbb{K}\text{halid}\ \mathbb{A}\text{idoun}",
            font_size=TITLE_FONT_SIZE,
            color=PRIMARY
        ).move_to(ORIGIN)
        self.play(Write(name))
        self.wait(1.5)

        name_target = MathTex(
            r"\mathbb{K}\text{halid}\ \mathbb{A}\text{idoun}",
            font_size=SMALL_FONT_SIZE,
            color=PRIMARY
        ).to_corner(UR)
        self.play(ReplacementTransform(name, name_target))
        self.wait(1)

        # --- 1. Définition d'un ouvert ---
        definition = MathTex(
            r"\text{Un ouvert de } \mathbb{R} \text{ est un ensemble } U \subset \mathbb{R},",
            r"\forall x \in U, \exists \varepsilon > 0, \ (x-\varepsilon, x+\varepsilon) \subset U",
            font_size=BODY_FONT_SIZE,
            color=FG
        ).arrange(DOWN, buff=0.5).move_to(ORIGIN)
        self.play(Write(definition))
        self.wait(2)
        self.play(FadeOut(definition))

        # --- 2. Exemple : intervalle ouvert ---
        axis = NumberLine(
            x_range=[-4, 4, 1],
            length=10,
            color=PRIMARY,
            include_numbers=True,
            font_size=SMALL_FONT_SIZE
        )
        interval = Line(axis.n2p(-2), axis.n2p(2), color=SECONDARY, stroke_width=10)
        open_left = Circle(radius=0.15, color=SECONDARY).move_to(axis.n2p(-2))
        open_right = Circle(radius=0.15, color=SECONDARY).move_to(axis.n2p(2))

        self.play(Create(axis))
        self.play(Create(interval), Create(open_left), Create(open_right))
        self.wait(0.5)

        label = MathTex(
            r"(-2,2) \text{ est un ouvert de } \mathbb{R}",
            font_size=BODY_FONT_SIZE,
            color=FG
        ).next_to(axis, DOWN, buff=0.7)
        self.play(Write(label))
        self.wait(2)
        self.play(FadeOut(axis), FadeOut(interval), FadeOut(open_left), FadeOut(open_right), FadeOut(label))

        # --- 3. Exemple : intervalle fermé ---
        axis2 = NumberLine(
            x_range=[-4, 4, 1],
            length=10,
            color=PRIMARY,
            include_numbers=True,
            font_size=SMALL_FONT_SIZE
        )
        interval2 = Line(axis2.n2p(-2), axis2.n2p(2), color=PRIMARY, stroke_width=10)
        closed_left = Dot(axis2.n2p(-2), color=PRIMARY)
        closed_right = Dot(axis2.n2p(2), color=PRIMARY)

        self.play(Create(axis2))
        self.play(Create(interval2), Create(closed_left), Create(closed_right))
        self.wait(0.5)

        label2 = MathTex(
            r"[-2,2] \text{ est fermé, mais pas ouvert}",
            font_size=BODY_FONT_SIZE,
            color=FG
        ).next_to(axis2, DOWN, buff=0.7)
        self.play(Write(label2))
        self.wait(2)
        self.play(FadeOut(axis2), FadeOut(interval2), FadeOut(closed_left), FadeOut(closed_right), FadeOut(label2))

        # --- 4. Boule ouverte centrée en x ---
        axis3 = NumberLine(
            x_range=[-4, 4, 1],
            length=10,
            color=PRIMARY,
            include_numbers=True,
            font_size=SMALL_FONT_SIZE
        )
        x_val = 1
        x_dot = Dot(axis3.n2p(x_val), color=SECONDARY)
        ball = Line(axis3.n2p(x_val-1), axis3.n2p(x_val+1), color=SECONDARY, stroke_width=8)
        open_ball_left = Circle(radius=0.13, color=SECONDARY).move_to(axis3.n2p(x_val-1))
        open_ball_right = Circle(radius=0.13, color=SECONDARY).move_to(axis3.n2p(x_val+1))

        self.play(Create(axis3))
        self.play(Create(ball), Create(x_dot), Create(open_ball_left), Create(open_ball_right))
        self.wait(0.5)

        label3 = MathTex(
            r"B(x,r) = (x-r, x+r) \text{ est un ouvert}",
            font_size=BODY_FONT_SIZE,
            color=FG
        ).next_to(axis3, DOWN, buff=0.7)
        self.play(Write(label3))
        self.wait(2)
        self.play(FadeOut(axis3), FadeOut(ball), FadeOut(x_dot), FadeOut(open_ball_left), FadeOut(open_ball_right), FadeOut(label3))

        self.wait(1)
