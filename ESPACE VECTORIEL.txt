from manim import *
import numpy as np
config.frame_width = 16
config.frame_height = 9

TITLE_FONT_SIZE = 56
BODY_FONT_SIZE = 36
SMALL_FONT_SIZE = 24

class LinearMapScene(Scene):
    def construct(self):
        # Couleurs
        primary = ManimColor.from_hex("#58C4DD")
        secondary = ManimColor.from_hex("#FC6255")
        accent = ManimColor.from_hex("#FFD700")
        background = ManimColor.from_hex("#000000")
        foreground = ManimColor.from_hex("#ffffff")
        self.camera.background_color = background

        # --- Nom stylisé ---
        name = MathTex(r"\mathbb{K}\text{halid}\ \mathbb{A}\text{idoun}",
                       font_size=TITLE_FONT_SIZE, color=primary).move_to(ORIGIN)
        self.play(Write(name))
        self.wait(1.5)

        name_target = MathTex(r"\mathbb{K}\text{halid}\ \mathbb{A}\text{idoun}",
                              font_size=SMALL_FONT_SIZE, color=primary)
        name_target.to_edge(UP, buff=0.3).to_edge(RIGHT, buff=0.5)
        self.play(ReplacementTransform(name, name_target))
        self.wait(1)

        # --- 1. Définition d'une application linéaire ---
        definition = MathTex(
            r"\text{Une application linéaire } f : V \to W \text{ vérifie :}",
            r"\forall u, v \in V, \forall \lambda \in \mathbb{R} :",
            r"f(u + v) = f(u) + f(v),\quad f(\lambda u) = \lambda f(u)",
            color=foreground,
            font_size=BODY_FONT_SIZE
        ).arrange(DOWN, aligned_edge=LEFT, buff=0.5).move_to(ORIGIN)
        self.play(Write(definition))
        self.wait(2)
        self.play(FadeOut(definition))

        # --- 2. Exemple : Multiplication par une matrice simple ---
        matrix_ex = MathTex(
            r"f:\mathbb{R}^2 \to \mathbb{R}^2,\quad f\begin{pmatrix}x\\y\end{pmatrix} = \begin{pmatrix}2x\\3y\end{pmatrix}",
            color=foreground, font_size=BODY_FONT_SIZE
        ).move_to(ORIGIN)
        self.play(Write(matrix_ex))
        self.wait(2)
        self.play(FadeOut(matrix_ex))

        # --- 3. Exemple : Dérivation sur polynômes ---
        poly_ex = MathTex(
            r"f : \mathbb{R}_2[X] \to \mathbb{R}_1[X],\quad f(p(x)) = p'(x)",
            color=foreground, font_size=BODY_FONT_SIZE
        ).move_to(ORIGIN)
        self.play(Write(poly_ex))
        self.wait(2)
        self.play(FadeOut(poly_ex))

        # --- 4. Exemple : Transposition de matrices 2x2 ---
        mat_ex = MathTex(
            r"f : M_{2,2}(\mathbb{R}) \to M_{2,2}(\mathbb{R}),\quad f(A) = A^T",
            color=foreground, font_size=BODY_FONT_SIZE
        ).move_to(ORIGIN)
        self.play(Write(mat_ex))
        self.wait(2)
        self.play(FadeOut(mat_ex))

        # --- 5. Exemple : Somme de vecteurs ---
        sum_ex = MathTex(
            r"f: \mathbb{R}^2 \times \mathbb{R}^2 \to \mathbb{R}^2,\quad f(u,v) = u+v",
            color=foreground, font_size=BODY_FONT_SIZE
        ).move_to(ORIGIN)
        self.play(Write(sum_ex))
        self.wait(2)
        self.play(FadeOut(sum_ex))

        # --- 6. Exemple : Évaluation linéaire ---
        eval_ex = MathTex(
            r"f : \mathbb{R}_2[X] \to \mathbb{R},\quad f(p(x)) = p(0) + p(1)",
            color=foreground, font_size=BODY_FONT_SIZE
        ).move_to(ORIGIN)
        self.play(Write(eval_ex))
        self.wait(2)
        
        self.play(FadeOut(eval_ex))

        self.wait(1)
